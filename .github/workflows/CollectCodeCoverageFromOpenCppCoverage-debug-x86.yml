name: Collect source code tests coverage using OpenCppCoverage (debug-x86)
on: [push,workflow_dispatch]
# Configuration
env:
  strConfiguration: Debug # or Release
  strPlatform: x86 # or x64
  dirTestExecutables: ${{github.workspace}}\qa\UnitTest\bin\Debug # build from *.sln, all tests
  module0: GTest1.exe
  module1: GTestDefWindowProc.exe
  module2: GTestEmptyWorkingSet.exe
  module3: GTestMem.exe
  strNameOccSetupFile: OpenCppCoverageSetup-x86-0.9.9.0.exe
  strGhTagOccSetupFile: release-0.9.9.0 # from https://github.com/OpenCppCoverage/OpenCppCoverage/tags
  relSetupOcc: Occ
  strOccExecutable: OpenCppCoverage.exe
  relHtmlReport: HtmlReportOcc
jobs:
  collect-tests-code-coverage:
    runs-on: windows-latest
    permissions:
      actions: read # for "dawidd6/action-download-artifact@v2"
      contents: read # for "actions/checkout@v3" when GITHUB_TOKEN
    steps:
      - uses: actions/checkout@v3

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build-tests-gtest-debug-x86.yml
          name: artifact-build-tests-gtest-${{env.strConfiguration}}-${{env.strPlatform}}
          path: ${{env.dirTestExecutables}}
          search_artifacts: true

      - name: Download tool
        uses: robinraju/release-downloader@v1.8
        with:
          repository: "OpenCppCoverage/OpenCppCoverage"
          fileName: ${{env.strNameOccSetupFile}}
          tag: ${{env.strGhTagOccSetupFile}}

      - name: Install tool
        run: |
          dir "${env:strNameOccSetupFile}"
          $args="/VERYSILENT /SUPPRESSMSGBOXES /DIR=${env:RUNNER_TEMP}\${env:relSetupOcc} /LOG=${env:RUNNER_TEMP}\${env:strNameOccSetupFile}.log"
          Start-Process "${env:strNameOccSetupFile}" -ArgumentList $args -Wait 
          dir ${env:RUNNER_TEMP}
#      - name: Show tool0
#        continue-on-error: true
#        run: |
#          dir .
#          dir ${env:RUNNER_TEMP}
#          dir ${env:RUNNER_TEMP}\${env:relSetupOcc}

      - name: Run tool
        # TODO: multiline excluded_sources
        run: | # double launching because windows system hooks from AppCompat conflicts with gmock-win32 hooks
          echo 1
          .${env:dirTestExecutables}\${env:module0} --help > nul 2>&1
          .${env:dirTestExecutables}\${env:module1} --help > nul 2>&1
          .${env:dirTestExecutables}\${env:module2} --help > nul 2>&1
          .${env:dirTestExecutables}\${env:module3} --help > nul 2>&1
          echo 2
          $modules="--modules ${env:dirTestExecutables}"
          $excluded_sources="--excluded_sources 'src\Main.h' --excluded_sources 'src\Legacy' --excluded_sources 'qa\UnitTest' --excluded_sources 'D:\a\_work' --excluded_sources 'C:\Program Files'"
          $excluded_line_regex="--excluded_line_regex .*@NOCOVERAGE.*"
          $export_type="--export_type html:${env:RUNNER_TEMP}\${env:relHtmlReport}"
          $program_to_run="${env:dirTestExecutables}\${env:module0} --gtest_brief=1"
          echo 3
          $args="$modules $excluded_sources $excluded_line_regex $export_type -- $program_to_run"
          echo $args
          cd src
          $occ_exe="${env:RUNNER_TEMP}\${env:relSetupOcc}\${env:strOccExecutable}"
          echo $occ_exe
          D:\a\_temp\Occ\OpenCppCoverage.exe --modules D:\a\turbo-octo-adventure\turbo-octo-adventure\qa\UnitTest\bin\Debug --excluded_sources 'src\Main.h' --excluded_sources 'src\Legacy' --excluded_sources 'qa\UnitTest' --excluded_sources 'D:\a\_work' --excluded_sources 'C:\Program Files' --excluded_line_regex .*@NOCOVERAGE.* --export_type html:D:\a\_temp\HtmlReportOcc -- D:\a\turbo-octo-adventure\turbo-octo-adventure\qa\UnitTest\bin\Debug\GTest1.exe --gtest_brief=1
      # & $occ_exe $args
      - uses: actions/upload-artifact@v3
        with:
          name: artifact-tests-coverage-open-cpp-coverage
          path: ${{runner.temp}}\${{env.relHtmlReport}}
