name: Google Test
on: [workflow_dispatch]
jobs:
  google-tests:
    runs-on: windows-latest
    permissions:
      actions: read # for "dawidd6/action-download-artifact@v2"
      contents: read # for "actions/checkout@v3" when GITHUB_TOKEN
    steps:
      - uses: actions/checkout@v3
      
#      - name: Download artifact
#        uses: dawidd6/action-download-artifact@v2
#        with:
#          github_token: ${{secrets.GITHUB_TOKEN}}
#          workflow: googletest.yml
#          name: artifact-build-tests-debug-x86
#          path: ${{github.workspace}}\qa\UnitTest\bin\Debug # build from *.sln
#          search_artifacts: true
          
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - name: Build tests
#        run: MSBuild qa/UnitTest -m -p:Configuration=Debug -p:Platform=x86 # build from *.sln
        run: MSBuild qa/UnitTest/GTestMem -m -p:Configuration=Debug -p:Platform=x86 # build from *.vcxproj

#      - name: Upload artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: artifact-build-tests-debug-x86
#          path: |
#            ${{github.workspace}}\qa\UnitTest\bin\Debug\*.exe

      - name: Run tests and collect reports
        run: |
          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\GTestMem\bin\Debug\GTestMem.exe" --gtest_output="xml:${env:RUNNER_TEMP}/GTestMem_Debug_x64.xml"
#          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTest1.exe" --gtest_output="xml:${env:RUNNER_TEMP}/GTest1_Debug_x86.xml"
#          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTest1.exe" --gtest_output="xml:${env:RUNNER_TEMP}/GTest1_Debug_x86.xml"
#          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTestDefWindowProc.exe" --gtest_brief=1 --gtest_output="xml:${env:RUNNER_TEMP}/GTestDefWindowProc_Debug_x86.xml"
#          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTestEmptyWorkingSet.exe" --gtest_brief=1 --gtest_output="xml:${env:RUNNER_TEMP}/GTestEmptyWorkingSet_Debug_x86.xml"
#          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTestMem.exe" --gtest_brief=1 --gtest_output="xml:${env:RUNNER_TEMP}/GTestMem_Debug_x86.xml"

#      - uses: actions/setup-python@v4
#        with:
#          python-version: '3.x'
#          cache: 'pip'
#      - name: Install merger
#        run: pip install junitparser
#      - name: Merge reports
#        run: junitparser merge --suite-name AllTests --glob "${env:RUNNER_TEMP}\*_Debug_x86.xml" "combined_Debug_x86.xml"
#      - name: Install converter
#        run: git clone https://github.com/Alexovsky5/gtest_report
#      - name: Convert xml to html
#        working-directory: ./gtest_report # directory html_resources must be in current dir
#        run: py scripts\genHtmlReportFromGtest.py "out/gtest_report.html" "../combined_Debug_x86.xml"
#      - uses: actions/upload-artifact@v3
#        with:
#          name: artifact-gtest-report
#          path: gtest_report/out/
