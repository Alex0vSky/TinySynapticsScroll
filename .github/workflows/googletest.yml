name: Google Test
on: [workflow_dispatch]
jobs:
#       continue-on-error: true
  google-tests:
    runs-on: windows-latest
    permissions:
      actions: read # for "dawidd6/action-download-artifact@v2"
      contents: read # for "actions/checkout@v3" when GITHUB_TOKEN
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: googletest.yml
          name: artifact-all-tests-builded
          path: ${{env.GITHUB_WORKSPACE}}\qa\UnitTest\bin\Debug # build from *.sln
          search_artifacts: true
      - uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - name: Setup cache python
        uses: actions/cache@v3
        with:
            path: ${{ env.pythonLocation }}
            key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('dev-requirements.txt') }}

#      - name: Add MSBuild to PATH
#        uses: microsoft/setup-msbuild@v1.1
#      - name: Build tests
#        run: MSBuild qa/UnitTest -m -p:Configuration=Debug -p:Platform=x86
#      - uses: actions/upload-artifact@v3
#        with:
#          name: artifact-all-tests-builded
#          path: |
#            "${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug"\*.exe # build from *.sln
      - name: Run tests and collect reports
        run: | # double run GTest1
          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTest1.exe" --gtest_brief=1 --gtest_output="xml:${env:RUNNER_TEMP}/GTest1_Debug_x86.xml"
          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTest1.exe" --gtest_brief=1 --gtest_output="xml:${env:RUNNER_TEMP}/GTest1_Debug_x86.xml"
          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTestDefWindowProc.exe" --gtest_brief=1 --gtest_output="xml:${env:RUNNER_TEMP}/GTestDefWindowProc_Debug_x86.xml"
          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTestEmptyWorkingSet.exe" --gtest_brief=1 --gtest_output="xml:${env:RUNNER_TEMP}/GTestEmptyWorkingSet_Debug_x86.xml"
          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTestMem.exe" --gtest_brief=1 --gtest_output="xml:${env:RUNNER_TEMP}/GTestMem_Debug_x86.xml"
      - name: Install merger
        run: pip install junitparser
      - name: Merge reports
        run: junitparser merge --suite-name AllTests --glob "${env:RUNNER_TEMP}\*_Debug_x86.xml" "combined_Debug_x86.xml"
      - name: Install converter
        run: git clone https://github.com/Alexovsky5/gtest_report
      - name: Convert xml to html
        working-directory: ./gtest_report # directory html_resources must be in current dir
        run: scripts\genHtmlReportFromGtest.py "out/gtest_report.html" "../combined_Debug_x86.xml"
      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: |
            combined_Debug_x86.xml
            gtest_report/out/
