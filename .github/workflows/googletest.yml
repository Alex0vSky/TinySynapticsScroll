name: Google Test
on: [workflow_dispatch]
jobs:
#       continue-on-error: true
  google-tests:
    runs-on: windows-latest
    permissions:
      actions: read # for "dawidd6/action-download-artifact@v2"
      contents: read # for "actions/checkout@v3" when GITHUB_TOKEN
    steps:
      - uses: actions/checkout@v3

      - name: Download artifact1
        uses: dawidd6/action-download-artifact@v2
        env:
          asd: ${{ env.GITHUB_WORKSPACE }}
        continue-on-error: true
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: googletest.yml
          name: artifact-all-tests-builded
          path: ${{github.workspace}}\qa\UnitTest\bin\Debug # build from *.sln
          search_artifacts: true

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: googletest.yml
          name: artifact-all-tests-builded
#          path: ${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug # build from *.sln
          path: D:\a\turbo-octo-adventure\turbo-octo-adventure\qa\UnitTest\bin\Debug # build from *.sln
          search_artifacts: true

      - name: asd
        continue-on-error: true
        run: echo ${env:GITHUB_WORKSPACE}

      - name: Run tests and collect reports
        run: | # double run GTest1
          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTest1.exe" --gtest_brief=1 --gtest_output="xml:${env:RUNNER_TEMP}/GTest1_Debug_x86.xml"
          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTest1.exe" --gtest_brief=1 --gtest_output="xml:${env:RUNNER_TEMP}/GTest1_Debug_x86.xml"
          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTestDefWindowProc.exe" --gtest_brief=1 --gtest_output="xml:${env:RUNNER_TEMP}/GTestDefWindowProc_Debug_x86.xml"
          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTestEmptyWorkingSet.exe" --gtest_brief=1 --gtest_output="xml:${env:RUNNER_TEMP}/GTestEmptyWorkingSet_Debug_x86.xml"
          ."${env:GITHUB_WORKSPACE}\qa\UnitTest\bin\Debug\GTestMem.exe" --gtest_brief=1 --gtest_output="xml:${env:RUNNER_TEMP}/GTestMem_Debug_x86.xml"
      - name: Install merger
        run: pip install junitparser
      - name: Merge reports
        run: junitparser merge --suite-name AllTests --glob "${env:RUNNER_TEMP}\*_Debug_x86.xml" "combined_Debug_x86.xml"
      - name: Install converter
        run: git clone https://github.com/Alexovsky5/gtest_report
      - name: Convert xml to html
        working-directory: ./gtest_report # directory html_resources must be in current dir
        run: py scripts\genHtmlReportFromGtest.py "out/gtest_report.html" "../combined_Debug_x86.xml"
      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: |
            combined_Debug_x86.xml
            gtest_report/out/
