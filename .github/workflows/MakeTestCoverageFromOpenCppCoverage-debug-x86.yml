name: Make test coverage from OpenCppCoverage (debug-x86)
on: [push,workflow_dispatch]
env:
  dirTestsExe: '${{github.workspace}}\qa\UnitTest\bin\Debug' # build from *.sln, debug-x86
  module0: GTest1.exe
  strNameOpenCppCoverageSetup: OpenCppCoverageSetup-x86-0.9.9.0.exe
  strTagOpenCppCoverageSetup: "release-0.9.9.0" # from https://github.com/OpenCppCoverage/OpenCppCoverage/tags
jobs:
  test-coverage:
    runs-on: windows-latest
    permissions:
      actions: read # for "dawidd6/action-download-artifact@v2"
      contents: read # for "actions/checkout@v3" when GITHUB_TOKEN
    steps:
      - uses: actions/checkout@v3

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: googletest.yml
          name: artifact-build-tests-debug-x86
          path: ${{github.workspace}}\qa\UnitTest\bin\Debug # build from *.sln
          search_artifacts: true

      - name: Download Open_Cpp_Coverage
        uses: robinraju/release-downloader@v1.8
        with:
          repository: "OpenCppCoverage/OpenCppCoverage"
          fileName: ${{env.strNameOpenCppCoverageSetup}}
          tag: ${{env.strTagOpenCppCoverageSetup}}

      - name: Install Open Cpp Coverage
        shell: cmd
        run: |
          .\OpenCppCoverageSetup-x86-0.9.9.0.exe /VERYSILENT /DIR="Occ"
      - name: Install Open Cpp Coverage1
        continue-on-error: true
        run: |
          .\OpenCppCoverageSetup-x86-0.9.9.0.exe /VERYSILENT /DIR="Occ"
      - name: Install Open Cpp Coverage2
        continue-on-error: true
        run: |
          .\$strNameOpenCppCoverageSetup /VERYSILENT /DIR="Occ"
      - name: Install Open Cpp Coverage3
        continue-on-error: true
        run: |
          ."${env:strNameOpenCppCoverageSetup}" /VERYSILENT /DIR="Occ"

      - name: Show Open_Cpp_Coverage
        continue-on-error: true
        run: |
          dir ${{github.workspace}}\Occ\OpenCppCoverage.exe
          echo "--modules "$dirTestsExe" --excluded_sources "src\Main.h" --excluded_line_regex .*@NOCOVERAGE.* --export_type html:${{github.workspace}}\Coverage -- ${env:dirTestsExe}\${env:module0} --gtest_brief=1"
          echo "--modules ${env:dirTestsExe} --excluded_sources "src\Main.h" --excluded_line_regex .*@NOCOVERAGE.* --export_type html:${{github.workspace}}\Coverage -- ${env:dirTestsExe}\${env:module0} --gtest_brief=1"
          echo 'env:module0: '"${env:module0}"
          echo 'env:module0: '${env:module0}
          echo 'module0: '"$module0"
          echo 'dirTestsExe: '$dirTestsExe
          echo 'strNameOpenCppCoverageSetup: '$strNameOpenCppCoverageSetup

      - name: Run Open_Cpp_Coverage0
        continue-on-error: true # when fail test
        run: |
          cd src
          ."${{github.workspace}}\Occ\OpenCppCoverage.exe" --modules GTest1.exe --excluded_sources "src\Main.h" --excluded_line_regex .*@NOCOVERAGE.* --export_type html:${{github.workspace}}\Coverage -- ${env:dirTestsExe}\${env:module0} --gtest_brief=1

      - uses: actions/upload-artifact@v3
        with:
          name: artifact-tests-coverage-open-cpp-coverage
          path: Coverage/
